server:
  servlet:
    context-path: /myblog
  port: 8080

# 数据库连接 mysql
spring:
  datasource:
    url: jdbc:mysql://192.168.20.89:3306/myblog?useUnicode=true&characterEncoding=utf-8&useSSL=false
    data-username: root
    data-password: 123456
    type: com.alibaba.druid.pool.DruidDataSource
    driver-class-name: com.mysql.cj.jdbc.Driver
    # 初始化时建立物理连接的个数。初始化发生在显示调用init方法，或者第一次getConnection时
    initialSize: 5
    # 最大和最小连接池数量
    minIdle: 5
    maxActive: 20
    # 获取连接时最大等待时间，单位毫秒。配置了maxWait之后，缺省启用公平锁，并发效率会有所下降，
    # 如果需要可以通过配置useUnfairLock属性为true使用非公平锁。
    maxWait: 60000
    # 配置间隔多久才进行一次检测需要关闭的空闲连接，单位是毫秒
    timeBetweenEvictionRunsMillis: 60000
    # 配置一个连接在池中最小生存的时间，单位是毫秒
    minEvictableIdleTimeMillis: 300000
    # 用来检测连接是否有效的sql，要求是一个查询语句。
    # 如果validationQuery为null，testOnBorrow、testOnReturn、testWhileIdle都不会起作用。
    validationQuery: SELECT 1 FROM DUAL
    # 建议配置为true，不影响性能，并且保证安全性。开启后申请连接的时候会进行检测。
    # 如果空闲时间大于timeBetweenEvictionRunsMillis，就会执行validationQuery检测连接是否有效
    testWhileIdle: true
    # 申请连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能
    testOnBorrow: false
    # 归还连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能
    testOnReturn: false
    # 是否缓存preparedStatement，也就是PSCache。PSCache对支持游标的数据库性能提升巨大，比如说oracle。在mysql下建议关闭。
    poolPreparedStatements: false
    # 通过别名的方式配置扩展插件，常用的插件有： 监控统计用的filter:stat 日志用的filter:log4j  防御sql注入的filter:wall
    # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
    # 配置log4j的时候需要有log4j的相关依赖包不然会保错
    filters: stat,wall # ,log4j
    # 打开PSCache时，并且指定每个连接上PSCache的大小
    maxPoolPreparedStatementPerConnectionSize: 20
    # 用于合并多个DruidDataSource的监控数据
    useGlobalDataSourceStat: true
    # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
    connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=500
  thymeleaf:
    cache: false
logging:
  config: classpath:logback-spring.xml
  level:
     dao: debug
     org:
        mybatis: info
# mybatis:
  # config-location: classpath:/mybatis-config.xml